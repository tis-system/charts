apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agent.fullname" . }}
  labels:
    {{- include "agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: '{{ .Values.image.name }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --namespace
            - '{{ .Release.Namespace }}'
          env:
            - name: REGISTRY_SYNC_ENABLE
              value: '{{ .Values.registrySync.enable }}'

            - name: REGISTRY_SYNC_PUBLISH_NAMESPACE
              value: '{{ .Values.registrySync.publishNamespace }}'
            - name: REGISTRY_SYNC_RESYNC_PERIOD
              value: '{{ .Values.registrySync.resyncPeriod }}'

            - name: REGISTRY_SYNC_CONSUL_ENDPOINT
              value: '{{ .Values.registrySync.consul.endpoint }}'
            - name: REGISTRY_SYNC_CONSUL_TOKEN
              value: '{{ .Values.registrySync.consul.token }}'
            - name: REGISTRY_SYNC_CONSUL_NAMESPACE
              value: '{{ .Values.registrySync.consul.namespace }}'

            - name: REGISTRY_SYNC_CLOUDMAP_REGION
              value: '{{ .Values.registrySync.cloudmap.region }}'
          volumeMounts:
            - mountPath: "/var/run/license"
              name: license
              readOnly: true
      volumes:
        - name: license
          secret:
            secretName: tis-license
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{- include "agent.selectorLabels" . | nindent 8 }}
spec:
  selector:
    {{- include "agent.selectorLabels" . | nindent 6 }}
  ports:
    - name: http
      port: 3000
      targetPort: 3000
